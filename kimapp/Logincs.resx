<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pnlLogo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>